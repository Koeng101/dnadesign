openapi: 3.0.0
info:
  title: DNA design API
  version: 0.0.1
servers:
  - url: https://dnadesign.bio/api
  - url: http://localhost:8080/api
components:
  schemas:
    Attachment:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
      required:
        - name
        - content
    FastaRecord:
      type: object
      properties:
        identifier:
          type: string
        sequence:
          type: string
      required:
        - identifier
        - sequence
    FastqRead:
      type: object
      properties:
        Identifier:
          type: string
        Optionals:
          type: object
          additionalProperties:
            type: string
        Sequence:
          type: string
        Quality:
          type: string
      required:
        - Identifier
        - Sequence
        - Quality
    Slow5Header:
      type: object
      properties:
        HeaderValues:
          type: array
          items:
            $ref: '#/components/schemas/HeaderValue'
    HeaderValue:
      type: object
      properties:
        ReadGroupID:
          type: integer
        Slow5Version:
          type: string
        Attributes:
          type: object
          additionalProperties:
            type: string
        EndReasonHeaderMap:
          type: object
          additionalProperties:
            type: integer
    Slow5Read:
      type: object
      properties:
        ReadID:
          type: string
        ReadGroupID:
          type: integer
        Digitisation:
          type: number
        Offset:
          type: number
        Range:
          type: number
        SamplingRate:
          type: number
        LenRawSignal:
          type: integer
        RawSignal:
          type: array
          items:
            type: integer
        ChannelNumber:
          type: string
        MedianBefore:
          type: number
        ReadNumber:
          type: integer
        StartMux:
          type: integer
        StartTime:
          type: integer
        EndReason:
          type: string
        EndReasonMap:
          type: object
          additionalProperties:
            type: integer
    PileupLine:
      type: object
      properties:
        Sequence:
          type: string
        Position:
          type: integer
        ReferenceBase:
          type: string
        ReadCount:
          type: integer
        ReadResults:
          type: array
          items:
            type: string
        Quality:
          type: string
      required:
        - Sequence
        - Position
        - ReferenceBase
        - ReadCount
        - ReadResults
        - Quality


    GenbankRecord:
      type: object
      required:
        - meta
        - features
        - sequence
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        sequence:
          type: string
    Meta:
      type: object
      required:
        - date
        - definition
        - accession
        - version
        - keywords
        - organism
        - source
        - taxonomy
        - origin
        - locus
        - references
        - baseCount
        - other
        - name
      properties:
        date:
          type: string
        definition:
          type: string
        accession:
          type: string
        version:
          type: string
        keywords:
          type: string
        organism:
          type: string
        source:
          type: string
        taxonomy:
          type: array
          items:
            type: string
        origin:
          type: string
        locus:
          $ref: '#/components/schemas/Locus'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        baseCount:
          type: array
          items:
            $ref: '#/components/schemas/BaseCount'
        other:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
    Feature:
      type: object
      required:
        - type
        - description
        - attributes
        - sequence
        - location
      properties:
        type:
          type: string
        description:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        sequence:
          type: string
        location:
          $ref: '#/components/schemas/Location'
    Reference:
      type: object
      required:
        - authors
        - title
        - journal
        - pubMed
        - remark
        - range
        - consortium
      properties:
        authors:
          type: string
        title:
          type: string
        journal:
          type: string
        pubMed:
          type: string
        remark:
          type: string
        range:
          type: string
        consortium:
          type: string
    Locus:
      type: object
      required:
        - name
        - sequenceLength
        - moleculeType
        - genbankDivision
        - modificationDate
        - sequenceCoding
        - circular
      properties:
        name:
          type: string
        sequenceLength:
          type: string
        moleculeType:
          type: string
        genbankDivision:
          type: string
        modificationDate:
          type: string
        sequenceCoding:
          type: string
        circular:
          type: boolean
    Location:
      type: object
      required:
        - start
        - end
        - complement
        - join
        - fivePrimePartial
        - threePrimePartial
        - gbkLocationString
        - subLocations
      properties:
        start:
          type: integer
        end:
          type: integer
        complement:
          type: boolean
        join:
          type: boolean
        fivePrimePartial:
          type: boolean
        threePrimePartial:
          type: boolean
        gbkLocationString:
          type: string
        subLocations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
    BaseCount:
      type: object
      required:
        - base
        - count
      properties:
        base:
          type: string
        count:
          type: integer
    Fragment:
      type: object
      properties:
        Sequence:
          type: string
        ForwardOverhang:
          type: string
        ReverseOverhang:
          type: string
      required:
        - Sequence
    Organism:
      type: string
      enum:
        - Escherichia coli
        - Pichia pastoris
    Enzyme:
      type: string
      enum:
        - BsaI
        - BbsI
        - PaqCI
        - BsmBI
    Change:
      type: object
      properties:
        Position:
          type: integer
        Step:
          type: integer
        From:
          type: string
        To:
          type: string
        Reason:
          type: string
      required:
        - Position
        - Step
        - From
        - To
        - Reason
    Codon:
      type: object
      properties:
        Triplet:
          type: string
        Weight:
          type: integer
      required:
        - Triplet
        - Weight
  
    AminoAcid:
      type: object
      properties:
        Letter:
          type: string
        Codons:
          type: array
          items:
            $ref: '#/components/schemas/Codon'
      required:
        - Letter
        - Codons
  
    CodonTable:
      type: object
      properties:
        StartCodons:
          type: array
          items:
            type: string
        StopCodons:
          type: array
          items:
            type: string
        AminoAcids:
          type: array
          items:
            $ref: '#/components/schemas/AminoAcid'
      required:
        - StartCodons
        - StopCodons
        - AminoAcids
    

paths:
  /execute_lua:
    post:
      tags:
        - lua
      summary: Run a lua script
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                script:
                  type: string
                attachments:
                  type: array
                  items:
                    $ref: '#/components/schemas/Attachment'
              required:
                - script
      responses:
        '200':
          description: Successful output
          content:
            application/json:
              schema:
                type: object
                properties:
                  output:
                    type: string
                  log:
                    type: string
                required:
                  - output
                  - log
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /io/fasta/parse:
    post:
      tags:
        - io
      summary: Parse FASTA data
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Parsed FASTA records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FastaRecord'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /io/fasta/write:
    post:
      tags:
        - io
      summary: Write FASTA data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FastaRecord'
      responses:
        '200':
          description: FASTA file written successfully
  /io/genbank/parse:
    post:
      tags:
        - io
      summary: Parse Genbank data
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Parsed Genbank records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenbankRecord'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /io/genbank/write:
    post:
      tags:
        - io
      summary: Write Genbank data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GenbankRecord'
      responses:
        '200':
          description: Genbank file written successfully
  /io/fastq/parse:
    post:
      tags:
        - io
      summary: Parse FASTQ data
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Parsed FASTQ records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FastqRead'

  /io/fastq/write:
    post:
      tags:
        - io
      summary: Write FASTQ data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FastqRead'
      responses:
        '200':
          description: FASTQ file written successfully
  /io/pileup/parse:
    post:
      summary: Parse Pileup Data
      tags:
        - io
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
              required:
                - data
      responses:
        '200':
          description: Array of Pileup Lines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PileupLine'
  /io/pileup/write:
    post:
      summary: Write Pileup Data
      tags:
        - io
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lines:
                  type: array
                  items:
                    $ref: '#/components/schemas/PileupLine'
      responses:
        '200':
          description: Pileup data string
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string

  /io/slow5/parse:
    post:
      summary: Parse slow5 Data
      tags:
        - io
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
              required:
                - data
      responses:
        '200':
          description: Parsed slow5 data
          content:
            application/json:
              schema:
                type: object
                properties:
                  header:
                    $ref: '#/components/schemas/Slow5Header'
                  reads:
                    type: array
                    items:
                      $ref: '#/components/schemas/Slow5Read'
  /io/slow5/write:
    post:
      summary: Write slow5 Data
      tags:
        - io
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/Slow5Header'
                reads:
                  type: array
                  items:
                    $ref: '#/components/schemas/Slow5Read'
      responses:
        '200':
          description: slow5 data written successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
  /io/slow5/svb_compress:
    post:
      summary: Compress Raw Signal with SVB
      tags:
        - io
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rawSignal:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Compressed raw signal
          content:
            application/json:
              schema:
                type: object
                properties:
                  mask:
                    type: string
                  data:
                    type: string
  /io/slow5/svb_decompress:
    post:
      summary: Decompress Raw Signal with SVB
      tags:
        - io
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lenRawSignal:
                  type: integer
                mask:
                  type: string
                data:
                  type: string
      responses:
        '200':
          description: Decompressed raw signal
          content:
            application/json:
              schema:
                type: object
                properties:
                  rawSignal:
                    type: array
                    items:
                      type: integer

  
  /cds/fix:
    post:
      tags:
        - cds
      summary: Fix CDS
      description: Fixes common problems in CDSs in preparation for DNA synthesis.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                organism:
                  $ref: '#/components/schemas/Organism'
                removeSequences:
                  type: array
                  items:
                    type: string
              required: 
                - sequence
                - organism
                - removeSequences
      responses:
        '200':
          description: Fixed CDS string with list of changes
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequence:
                    type: string
                  changes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Change'
                required:
                  - sequence
                  - changes
        '400':
          description: User input error
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /cds/optimize:
    post:
      tags:
        - cds
      summary: Optimize CDS.
      description:  RNG Seed defaults to 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                organism:
                  $ref: '#/components/schemas/Organism'
                seed:
                  type: integer
              required:
                - sequence
                - organism
      responses:
        '200':
          description: The optimized sequence
          content:
            application/json:
              schema:
                type: string
        '400':
          description: User input error
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /cds/translate:
    post:
      tags:
        - cds
      summary: Translate CDS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                translation_table:
                  type: integer
                  default: 11
              required: [translation_table, sequence]
      responses:
        '200':
          description: Translated sequence string
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  
  
  
  /pcr/primers/debruijn_barcodes:
    post:
      tags:
        - pcr
      summary: Generate De Bruijn sequence-based barcodes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                barcode_length:
                  type: integer
                max_sub_sequence:
                  type: integer
                banned_sequences:
                  type: array
                  items:
                    type: string
                gc_range:
                  type: object
                  properties:
                    max_gc:
                      type: number
                    min_gc:
                      type: number
              required:
                - barcode_length
                - max_sub_sequence
                - gc_range
      responses:
        '200':
          description: Array of generated barcode sequences
  
  /pcr/primers/marmur_doty:
    post:
      tags:
        - pcr
      summary: Calculate Melting Temperature using Marmur Doty method
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
              required:
                - sequence
      responses:
        '200':
          description: Calculated melting temperature as float
  
  /pcr/primers/santa_lucia:
    post:
      tags:
        - pcr
      summary: Calculate Melting Temperature using Santa Lucia method
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                primerConcentration:
                  type: number
                saltConcentration:
                  type: number
                magnesiumConcentration:
                  type: number
              required:
                - sequence
                - primerConcentration
                - saltConcentration
                - magnesiumConcentration
      responses:
        '200':
          description: Calculated melting temperature, dH, dS as floats

  /pcr/primers/melting_temperature:
    post:
      tags:
        - pcr
      summary: Calculate Melting Temperature
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
              required:
                - sequence
      responses:
        '200':
          description: Calculated melting temperature as float
  
  /pcr/complex_pcr:
    post:
      tags:
        - pcr
      summary: Simulate PCR
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                templates:
                  type: array
                  items:
                    type: string
                primers:
                  type: array
                  items:
                    type: string
                target_tm:
                  type: number
                  default: 60.0
                circular:
                  type: boolean
              required: [templates, primers, target_tm]
      responses:
        '200':
          description: PCR product strings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  
  /pcr/simple_pcr:
    post:
      tags:
        - pcr
      summary: Simulate a simple PCR
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  type: string
                forward_primer:
                  type: string
                reverse_primer:
                  type: string
                target_tm:
                  type: number
                  default: 60.0
                circular:
                  type: boolean
              required: [template, forward_primer, reverse_primer, target_tm]
      responses:
        '200':
          description: PCR product strings
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string

  /pcr/primers/design_primers:
    post:
      summary: Design PCR Primers
      tags:
        - pcr
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                targetTm:
                  type: number
                forward_overhang:
                  type: string
                  default: ""
                reverse_overhang:
                  type: string
                  default: ""
              required:
                - sequence
                - targetTm
      responses:
        '200':
          description: Forward and reverse primers
          content:
            application/json:
              schema:
                type: object
                properties:
                  forward_primer:
                    type: string
                  reverse_primer:
                    type: string

  

  /cloning/ligate:
    post:
      tags:
        - cloning
      summary: Simulate ligation
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fragment'
      responses:
        '200':
          description: Ligated product strings
  /cloning/restriction_digest:
    post:
      tags:
        - cloning
      summary: Simulate restriction digest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                enzyme:
                  $ref: '#/components/schemas/Enzyme'
      responses:
        '200':
          description: Array of fragments
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /cloning/goldengate:
    post:
      tags:
        - cloning
      summary: Simulate GoldenGate assembly
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequences:
                  type: array
                  items:
                    type: string
                enzyme:
                  $ref: '#/components/schemas/Enzyme'
      responses:
        '200':
          description: GoldenGate assembly product strings
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /cloning/fragment:
    post:
      tags:
        - cloning
      summary: Fragment DNA for GoldenGate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                min_fragment_size:
                  type: integer
                  default: 200
                max_fragment_size:
                  type: integer
                  default: 300
                exclude_overhangs:
                  type: array
                  items:
                    type: string
              required: [sequence, min_fragment_size, max_fragment_size]
      responses:
        '200':
          description: Array of fragments and a float
          content:
            application/json:
              schema:
                type: object
                properties:
                  fragments:
                    type: array
                    items:
                      type: string
                  efficiency:
                    type: number
                    default: 0.99
                required:
                  - fragments
                  - efficiency
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string

  
  

  /folding/zuker:
    post:
      summary: Zuker Folding
      tags:
        - folding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                temperature:
                  type: number
                  default: 37
              required:
                - sequence
      responses:
        '200':
          description: Folding results
          content:
            application/json:
              schema:
                type: object
                properties:
                  dot_bracket:
                    type: string
                  score:
                    type: number
  
  /folding/linearfold/vienna_rna_fold:
    post:
      summary: Vienna RNA Fold
      tags:
        - folding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                temperature:
                  type: number
                  default: 37
              required:
                - sequence
      responses:
        '200':
          description: Folding results
          content:
            application/json:
              schema:
                type: object
                properties:
                  dot_bracket:
                    type: string
                  score:
                    type: number
  /folding/linearfold/contra_fold_v2:
    post:
      summary: Contra Fold V2
      tags:
        - folding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
              required:
                - sequence
      responses:
        '200':
          description: Folding results
          content:
            application/json:
              schema:
                type: object
                properties:
                  dot_bracket:
                    type: string
                  score:
                    type: number



  /seqhash:
    post:
      summary: Sequence Hashing
      tags:
        - seqhash
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                sequenceType:
                  type: string
                  enum: [DNA, PROTEIN, RNA]
                circular:
                  type: boolean
                doubleStranded:
                  type: boolean
              required:
                - sequence
                - sequenceType
                - circular
                - doubleStranded
      responses:
        '200':
          description: Sequence hash
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
  
  /seqhash_fragment:
    post:
      summary: Sequence Hashing for Fragment
      tags:
        - seqhash
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                forwardOverhangLength:
                  type: integer
                  format: int8
                reverseOverhangLength:
                  type: integer
                  format: int8
              required:
                - sequence
                - forwardOverhangLength
                - reverseOverhangLength
      responses:
        '200':
          description: Fragment sequence hash
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string



  /codon_tables/new:
    post:
      summary: Create New Codon Table
      tags:
        - codon_tables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tableNumber:
                  type: integer
                  minimum: 1
                  maximum: 33
              required:
                - tableNumber
      responses:
        '200':
          description: New Codon Table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodonTable'
  
  /codon_tables/from_genbank:
    post:
      summary: Create Weighted Codon Table from Genbank Record
      tags:
        - codon_tables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                genbankRecord:
                  $ref: '#/components/schemas/GenbankRecord'
                codonTable:
                  $ref: '#/components/schemas/CodonTable'
              required:
                - genbankRecord
                - codonTable
      responses:
        '200':
          description: New Weighted Codon Table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodonTable'
  
  /codon_tables/compromise_tables:
    post:
      summary: Create Compromise Codon Table
      tags:
        - codon_tables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                codonTable1:
                  $ref: '#/components/schemas/CodonTable'
                codonTable2:
                  $ref: '#/components/schemas/CodonTable'
              required:
                - codonTable1
                - codonTable2
      responses:
        '200':
          description: New Compromise Codon Table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodonTable'
  /codon_tables/add_tables:
    post:
      summary: Add Two Codon Tables
      tags:
        - codon_tables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                codonTable1:
                  $ref: '#/components/schemas/CodonTable'
                codonTable2:
                  $ref: '#/components/schemas/CodonTable'
              required:
                - codonTable1
                - codonTable2
      responses:
        '200':
          description: New Codon Table from Addition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodonTable'
  /codon_tables/default_organisms:
    get:
      summary: Get Default Organism Names
      tags:
        - codon_tables
      responses:
        '200':
          description: List of default organism names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /codon_tables/get_organism_table:
    post:
      summary: Get Codon Table for an Organism
      tags:
        - codon_tables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organism:
                  type: string
              required:
                - organism
      responses:
        '200':
          description: Codon table for the specified organism
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodonTable'



  /align/needleman_wunsch:
    post:
      summary: Perform Needleman-Wunsch Alignment
      tags:
        - align
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence_a:
                  type: string
                sequence_b:
                  type: string
              required:
                - sequence_a
                - sequence_b
      responses:
        '200':
          description: Alignment results with score
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: number
                  alignment_a:
                    type: string
                  alignment_b:
                    type: string
  /align/smith_waterman:
    post:
      summary: Perform Smith-Waterman Alignment
      tags:
        - align
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence_a:
                  type: string
                sequence_b:
                  type: string
              required:
                - sequence_a
                - sequence_b
      responses:
        '200':
          description: Alignment results with score
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: number
                  alignment_a:
                    type: string
                  alignment_b:
                    type: string
  /align/mash:
    post:
      summary: Calculate Mash Distance
      tags:
        - align
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence_a:
                  type: string
                sequence_b:
                  type: string
                kmer_size:
                  type: integer
                sketch_size:
                  type: integer
              required:
                - sequence_a
                - sequence_b
                - kmer_size
                - sketch_size
      responses:
        '200':
          description: Mash distance result
          content:
            application/json:
              schema:
                type: object
                properties:
                  distance:
                    type: number
  /align/mash_many:
    post:
      summary: Calculate Mash Distance Against Many Sequences
      tags:
        - align
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
                comparison_sequences:
                  type: array
                  items:
                    type: string
                kmer_size:
                  type: integer
                sketch_size:
                  type: integer
              required:
                - sequence
                - comparison_sequences
                - kmer_size
                - sketch_size
      responses:
        '200':
          description: List of Mash distances
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number




  /utils/reverse_complement:
    post:
      summary: Reverse Complement of DNA Sequence
      tags:
        - utils
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
              required:
                - sequence
      responses:
        '200':
          description: Reverse complement sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequence:
                    type: string
  
  /utils/rna_reverse_complement:
    post:
      summary: Reverse Complement of RNA Sequence
      tags:
        - utils
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
              required:
                - sequence
      responses:
        '200':
          description: Reverse complement RNA sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequence:
                    type: string
  
  /utils/is_palindromic:
    post:
      summary: Check if Sequence is Palindromic
      tags:
        - utils
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sequence:
                  type: string
              required:
                - sequence
      responses:
        '200':
          description: Palindromic status
          content:
            application/json:
              schema:
                type: object
                properties:
                  isPalindromic:
                    type: boolean



  /random/random_dna:
    post:
      summary: Generate Random DNA Sequence
      tags:
        - random
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                length:
                  type: integer
                seed:
                  type: integer
                  nullable: true
              required:
                - length
      responses:
        '200':
          description: Random DNA sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequence:
                    type: string
  
  /random/random_rna:
    post:
      summary: Generate Random RNA Sequence
      tags:
        - random
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                length:
                  type: integer
                seed:
                  type: integer
                  nullable: true
              required:
                - length
      responses:
        '200':
          description: Random RNA sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequence:
                    type: string

  /random/random_protein:
    post:
      summary: Generate Random Protein Sequence
      tags:
        - random
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                length:
                  type: integer
                seed:
                  type: integer
                  nullable: true
              required:
                - length
      responses:
        '200':
          description: Random Protein sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequence:
                    type: string



