// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: query.sql

package uniprotapisql

import (
	"context"
)

const getEntry = `-- name: GetEntry :one
SELECT entry FROM uniprot WHERE id = ?
`

func (q *Queries) GetEntry(ctx context.Context, id string) (string, error) {
	row := q.db.QueryRowContext(ctx, getEntry, id)
	var entry string
	err := row.Scan(&entry)
	return entry, err
}

const insertEntry = `-- name: InsertEntry :one
INSERT INTO uniprot(id, seqhash, entry) VALUES (?, ?, ?) RETURNING id, seqhash, entry
`

type InsertEntryParams struct {
	ID      string
	Seqhash string
	Entry   string
}

func (q *Queries) InsertEntry(ctx context.Context, arg InsertEntryParams) (Uniprot, error) {
	row := q.db.QueryRowContext(ctx, insertEntry, arg.ID, arg.Seqhash, arg.Entry)
	var i Uniprot
	err := row.Scan(&i.ID, &i.Seqhash, &i.Entry)
	return i, err
}
