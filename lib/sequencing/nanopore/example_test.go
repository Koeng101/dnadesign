package nanopore_test

import (
	"fmt"

	"github.com/koeng101/dnadesign/lib/bio/fastq"
	"github.com/koeng101/dnadesign/lib/sequencing/nanopore"
)

func ExampleTrimBarcode() {
	// Here we are trimming the barcode06 barcode.

	// This exactBarcodeMatch has one barcode match in the forward direction and one loose match in the reverse direction
	exactBarcodeMatch := fastq.Read{Sequence: "TGTACTTGGTTCAGTTACGTATTGCTAAGGTTAAGACTACTTTCTGCCTTTGCGAGAACAGCGCCTTTCCCACTGTTAGATTGAGCTGAAGACAGTTACAAGCCAGGTGGACAATATGGGTGTCGATGTCCAGCACATCACGCTCGTACAGCGTCTGGGTGCTGCGGTAATTGTTGGCAATAGTCGCGAACGTCGTTTCACCCTCCAGACGGTAGCTGCCCTTACGCATGATATCCAGTTGTTCTTGGCTGATCTCGATCGGATCCTTGAAGATCGTCCACATCACGATCTGGTTACACGGCGGGGTACGTCTTCGTTACACCGGGATCATAGCTAGGTGCTGTTCTCGCAAAGGCGGAAACGCATCTTAAGCCTCACGATGGTA", Identifier: "3e94e6db-07cc-424c-8e9f-81390482bd9c", Quality: `#%'%%%'%&&(*5556>BACBCCEDFIHJFISGHOHLHDFCF>36>;4.,,*9977531//.**+++-'+1(*?EMIBC@DFGHFHKSJHFGE@????FIQEPJKIKSMHDC77779BCBLSGHIISKOHSGGJBAAABFGROSGHJGISGSLEKFKSSSIOFJKEFENFKSFF><<<+++)$%%%&&''(&&))))))88752>@@????AFIIKIIA432327;>887779:>AAHLQIJJJFOSEEGHSSFHDBCFNSLHHSGHFDDCHNKQSHHPSIISSHJJKIIOHNKLHOFCCCB;;<A;GG@@@@ADABAAS@B?>=?GHHIH@??@@ESEIFIAFDDC??AA@DEB@731(''&%$$$%''(++,-)))()))),)`}
	sequence, _ := nanopore.TrimBarcode("barcode06", exactBarcodeMatch)

	fmt.Println(sequence.Sequence)
	// Output: TTCTGCCTTTGCGAGAACAGCGCCTTTCCCACTGTTAGATTGAGCTGAAGACAGTTACAAGCCAGGTGGACAATATGGGTGTCGATGTCCAGCACATCACGCTCGTACAGCGTCTGGGTGCTGCGGTAATTGTTGGCAATAGTCGCGAACGTCGTTTCACCCTCCAGACGGTAGCTGCCCTTACGCATGATATCCAGTTGTTCTTGGCTGATCTCGATCGGATCCTTGAAGATCGTCCACATCACGATCTGGTTACACGGCGGGGTACGTCTTCGTTACACCGGGATCATAGCTA
}

func ExampleTrimImperfectBarcode() {
	// Here we are trimming the barcode06 barcode.

	// This imperfectBarcodeMatch has one barcode match in the forward direction and one in the reverse direction.
	imperfectBarcodeMatch := fastq.Read{Sequence: "TGTATTCGTACGTTACATATGCTAAGGTTAAGACTACTTTCTGCCTTTTGCAGACGCACTTAGCATCCGTCTAAATCTCGGGAAGACGTCTGGCAGTGTTGGCTGCCTTTGTCGAGGTTAAGGACTACGCAGAAAACACCTACTACAGCAACTTTATCAGCCACCTGGAAAATATCAAATATGCGGGTCAATCCACCGTCCTGCGTGGCCTGGACATCCGGGACATATCTCAAAAACTTGCATCATTATTACAGCTACCTGGGTAGCTTGACCACGCCGCCGTGTACCGAGAATGTGCACTGCTGTCTTCAGCTATGATCCCGGTGTAACAGGTGCTGTTCGCAAAGGCAGAAAGTAGTCTTAACCTTAGCAATACGT", Identifier: "7258a445-8793-466c-8c18-cf9d1cce93f2", Quality: `$$%$###$'%%%%%&+(''''''89:ABFGSHSGGLDCD?9:DC@<.+)()&&&&'''+))))+<?@GDEHD=<7.;8...<@ISGGHFGGGLPEHIFBAABHDFJGHSFEESKHGKSSHSNSJLGHISSECDDHRJILSIEEFFDJGIFLMJSSQHGSJGHEFSSSSHKSSKMJG222247'''''--++++-?@@EDIGILPGIHISSSJLSJGKFH>?>=8540/.-+++,.>>?@BDFEEDCBHKKJHHMMKLEMKKMHEKSSHGFJGFKIGIESMSGDHSRSJEA:888IJIHRHIHGFEI=CB88888KHDABAAE5CSIJFSRJGSSGEGI@>+)((+33;C=<;5212////3:::=FHD@9979998/+`}
	sequence, _ := nanopore.TrimBarcode("barcode06", imperfectBarcodeMatch)

	fmt.Println(sequence.Sequence)
	// Output: TTCTGCCTTTTGCAGACGCACTTAGCATCCGTCTAAATCTCGGGAAGACGTCTGGCAGTGTTGGCTGCCTTTGTCGAGGTTAAGGACTACGCAGAAAACACCTACTACAGCAACTTTATCAGCCACCTGGAAAATATCAAATATGCGGGTCAATCCACCGTCCTGCGTGGCCTGGACATCCGGGACATATCTCAAAAACTTGCATCATTATTACAGCTACCTGGGTAGCTTGACCACGCCGCCGTGTACCGAGAATGTGCACTGCTGTCTTCAGCTATGATCCCGGTGTAACAG
}
